version: 2.1
# Use a package of configuration called an orb
orbs:
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
   aws-cli: circleci/aws-cli@2.0.3
# Define the jobs we want to run for this project
jobs:
  # create_infrastructure: 
  #     docker:
  #       - image: amazon/aws-cli
  #     steps:
  #       - checkout
  #       - run:
  #           name: Create Cloudformation Stack
  #           command: |
  #             aws cloudformation deploy \
  #               --template-file template.yml \
  #               --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
  #               --region us-east-1
  
  configure_infrastructure: 
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["59:ec:13:aa:13:d2:18:41:8d:ff:15:e7:56:09:fd:23"] # You can get this ID in the section where you registered the SSH Key
      - run:
<<<<<<< HEAD
          name: Install dependencies
          command: |
            apk add --update ansible 
      - run:
          name: Configure server
          command: |
            ansible-playbook -i ../inventory main.yml
=======
          name: save IP Adress to inventory
          command: |
            aws ec2 describe-instances \
    \
        --query 'Reservations[*].Instances[*].PublicIpAddress' \
      --filters "Name=tag:Project,Values=udacity" \
      --output text >> inventory 
  # create_infrastructure: 
  #     docker:
  #       - image: amazon/aws-cli
  #     steps:
  #       - checkout
  #       - run:
  #           name: Create Cloudformation Stack
  #           command: |
  #             aws cloudformation deploy \
  #               --template-file template.yml \
  #               --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
  #               --region us-east-1
  # configure_infrastructure:
  #     docker:
  #       - image: python:3.7-alpine3.11
  #     steps:
  #       - checkout
  #       - add_ssh_key: 
  #           fingerprint: ["59:ec:13:aa:13:d2:18:41:8d:ff:15:e7:56:09:fd:23"]
  #       - run:
  #         name: Install dependencies
  #         command: |
  #           apk add --update ansible

  #       - run:
  #         name: Configure server
  #         command: |
  #           ansible-playbook -i inventory main.yml
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test
          command: |
            URL="https://blog.udacity.com/"
            # Test if website exists
          if curl -s --head ${URL}
          then
            return 0
          else
            return 1
          fi
>>>>>>> 2dc93e7 (smoke test)
# Sequential workflow
workflows:
  # Name the workflow
  myWorkflow:
    jobs:
      # - create_infrastructure
<<<<<<< HEAD
      - configure_infrastructure
      #     requires:
      #       - create_infrastructure
      
=======
      # - configure_infrastructure:
          # requires:
            # - create_infrastructure
      - save_to_inventory
      - smoke_test
>>>>>>> 2dc93e7 (smoke test)
